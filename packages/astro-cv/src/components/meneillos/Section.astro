---
import SectionHeading from "#/components/meneillos/SectionHeading.astro";
import ArticleHeader from "#/components/meneillos/ArticleHeader.astro";
import type { Entries,  } from "#/components/meneillos/base.astro";
import type { Profile } from "#/components/meneillos/base.astro";
import i18n from "#/i18n/i18n.json"


interface Props {
  langs?: boolean;
  entries?: Entries;
  profile?: Profile;
  lang: keyof typeof i18n;
  section: keyof typeof i18n[keyof typeof i18n];

}

let { section, entries, profile,lang } = Astro.props;

let ProfileContent = null;
if (profile) {
  ProfileContent = (await profile.render()).Content
}
---

<section>
  <SectionHeading>{i18n[lang][section].title}</SectionHeading>
  {
    entries && (
      <ul class="long-entries">
        {entries.map(async (entry) => {
          const { data } = entry;
          const { Content } = await entry.render();
          return (
            <li>
              <article>
                <ArticleHeader
                  title={data.title}
                  place={data.organization}
                  where={data.where}
                  when={data.when}
                />
                <Content />
              </article>
            </li>
          );
        })}
      </ul>
    )
  }
  {ProfileContent && <ProfileContent />}
</section>

<style>
  ul {
    display: grid;
  }
  .long-entries {
    gap: var(--btw-articles);
  }
  section {
    font-family: var(--font-poppins);
    font-size: var(--step--2);
    color: var(--gris-oscuro);
    p {
      font-weight: 300;
      line-height: var(--lh);
    }
  }

  article {
    display: grid;
    gap: var(--btw-p);
    & :global(strong) {
      font-weight: 500;
    }
    & :global(ul) {
      padding-left: 1rem;
    }
    & :global(li) {
      font-weight: 300;
      line-height: var(--lh-lg);
      list-style-type: disc;
    }
  }
</style>
